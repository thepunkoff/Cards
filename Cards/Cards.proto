syntax = "proto3";
package cards.v1;

option csharp_namespace = "Cards.Grpc.Generated";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service CardsService {
  // Получить информацию по слову.
  rpc GetCard(GetCardRequest) returns (Card);

  // Войти в систему.
  rpc Login(LoginRequest) returns (LoginResponse);
  
  // Получить следующую карточку для ревью.
  rpc GetCardForReview(GetCardForReviewRequest) returns (GetCardForReviewResponse);

  // Отправить отработанную карточку.
  rpc ReviewCard(ReviewCardRequest) returns (google.protobuf.Empty);

  // Получить идентификаторы карточек, которые знает пользователь.
  rpc GetKnownCards(GetKnownCardsRequest) returns (GetKnownCardsResponse);
  
  // Выучить карточку.
  rpc LearnCard(LearnCardRequest) returns (google.protobuf.Empty);
}


message ReviewCardRequest {
  string UserToken = 1;
  string CardId = 2;
  int32 Grade = 3;
  google.protobuf.Timestamp ReviewDate = 4;
}

message GetKnownCardsRequest {
  string UserToken = 1;
}

message GetKnownCardsResponse {
  repeated string KnownCardsIds = 1;
}

message LearnCardRequest {
  string CardId = 1;
  string UserToken = 2;
  bool Forget = 3;
}

message GetCardRequest {
  string Word = 1;
}

message GetCardForReviewRequest {
  string UserToken = 1;
  google.protobuf.Timestamp ReviewDate = 2;
}

message GetCardForReviewResponse {
  bool NothingToReview = 1;
  Card Card = 2;
}


message LoginRequest {
  string Username = 1;
  string Password = 2;
}

message LoginResponse {
  enum LoginStatus {
    AuthenticationError = 0;
    AlreadyLoggedIn = 1;
    LoggedIn = 2;
    Registered = 3;
  }
  LoginStatus Status = 1;
  string UserToken = 2;
}

message Card {
  string Id = 1;
  string EnglishWord = 2;
  repeated string RussianTranslations = 3;
  repeated string UsageExamples = 4;
  string Etymology = 5;
  string Definition = 6;
  string YouGlishLink = 7;
}